{"version":3,"sources":["component/Cards/Cards.module.css","component/Cards/Cards.js","api/index.js","component/Country/Country.js","component/CountryCards/CountryCards.js","component/Footer/Footer.js","component/Nav/Nav.js","App.js","reportWebVitals.js","index.js","component/CountryCards/CountryCards.module.css","component/Country/Country.module.css","component/Nav/Nav.module.css","App.module.css","component/Footer/Footer.module.css"],"names":["module","exports","Cards","data","cases","recovered","deaths","todayRecovered","todayCases","todayDeaths","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","dataCovidUrl","fetchData","a","axios","get","fetchCountryData","country","response","timeline","console","log","fetchHistoricalDataApi","fetchCountries","modifiedData","map","name","Country","handleCountryChange","useState","fetchedCountries","setFetchedCountries","useEffect","fetchApi","FormControl","NativeSelect","defaultValue","onChange","e","target","value","i","CountryCards","covidData","setCovidData","countryData","setCountryData","dates","Object","keys","values","cardAll","labels","date","datasets","label","borderColor","backgroundColor","fill","pointHoverBorderWidth","countryDates","countryCases","countryDeaths","countryRecovered","countryCard","Footer","footer","Nav","navBar","navLinks","to","App","state","homePage","Fragment","fetchedData","this","setState","basename","process","exact","path","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fef9356d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__1os4K\",\"card\":\"Cards_card__2qs6-\",\"infected\":\"Cards_infected__d2ipV\",\"recovered\":\"Cards_recovered__3iR7w\",\"deaths\":\"Cards_deaths__2g1Ii\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nexport default function Cards({\r\n  data: { cases, recovered, deaths, todayRecovered, todayCases, todayDeaths },\r\n}) {\r\n  if (!cases) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={4} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Cases\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={cases} duration={3} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of total cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={deaths} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of total deaths caused by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={recovered} duration={2} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recoveries from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid container spacing={4} justify=\"center\">\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Cases Today\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={todayCases} duration={3} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths Today\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={todayDeaths} duration={3} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of new cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          item\r\n          component={Card}\r\n          xs={12}\r\n          md={3}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered Today\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <CountUp start={0} end={todayRecovered} duration={3} separator=\",\" />\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of total active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst dataCovidUrl = \"https://disease.sh/v3\";\r\nconst dataCountryUrl = \"https://restcountries.eu/rest/v2\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const {\r\n      data: {\r\n        cases,\r\n        todayCases,\r\n        deaths,\r\n        todayDeaths,\r\n        recovered,\r\n        todayRecovered,\r\n      },\r\n    } = await axios.get(`${dataCovidUrl}/covid-19/all?yesterday=true&twoDaysAgo=false&allowNull=false`);\r\n\r\n    return {\r\n      cases,\r\n      todayCases,\r\n      deaths,\r\n      todayDeaths,\r\n      recovered,\r\n      todayRecovered,\r\n    };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountryData = async (country) => {\r\n  try {\r\n    const response = await axios.get(`${dataCovidUrl}/covid-19/countries/${country}?yesterday=true&twoDaysAgo=false&allowNull=false`);\r\n    const {\r\n      data: {\r\n        timeline: { cases, deaths, recovered },\r\n      },\r\n    } = response;\r\n    console.log(response);\r\n    return { cases, deaths, recovered };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchAllCountryData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${dataCovidUrl}/covid-19/countries?yesterday=true&twoDaysAgo=false`);\r\n        const modifiedData = data.map((country) => ({\r\n          country: country.country,\r\n          cases: country.cases,\r\n          todaycases: country.todayCases,\r\n          deaths: country.deaths,\r\n          todaydeaths: country.todayDeaths,\r\n          recovered: country.recovered,\r\n          todayrecovered: country.todayRecovered\r\n        }));\r\n        return modifiedData;\r\n      } catch (error) {}\r\n  };\r\n\r\nexport const fetchHistoricalDataApi = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${dataCovidUrl}/covid-19/historical/all?lastdays=60`);\r\n    return {\r\n      data,\r\n    };\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n      const { data } = await axios.get(`${dataCountryUrl}/all`);\r\n      const modifiedData = data.map((country) => ({\r\n        name: country.name\r\n      }));\r\n      return modifiedData;\r\n    } catch (error) {}\r\n  };\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport styles from \"./Country.module.css\";\r\n\r\nexport default function Country({ handleCountryChange }) {\r\n  const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n  return (\r\n    <FormControl className={styles.FormControl}>\r\n      <NativeSelect\r\n        className={styles.NativeSelect}\r\n        defaultValue=\"\"\r\n        onChange={(e) => {\r\n          handleCountryChange(e.target.value);\r\n        }}\r\n      >\r\n        <option value=\"\">Select a country</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country.name}>\r\n            {country.name}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { fetchCountryData, fetchHistoricalDataApi } from \"../../api\";\r\nimport Country from \"../Country/Country\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./CountryCards.module.css\";\r\n\r\nexport default function CountryCards() {\r\n  const [covidData, setCovidData] = useState({});\r\n  const [countryData, setCountryData] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n        setCovidData(await fetchHistoricalDataApi());\r\n    };\r\n    fetchApi();\r\n  }, []);\r\n\r\n  const handleCountryChange = async (country) => {\r\n    const fetchApi = await fetchCountryData(country);\r\n    setCountryData(fetchApi);\r\n  };\r\n\r\n  const dates = covidData.data\r\n    ? Object.keys(covidData.data.cases)\r\n    : null;\r\n\r\n  const cases = covidData.data\r\n    ? Object.values(covidData.data.cases)\r\n    : null;\r\n\r\n  const recovered = covidData.data\r\n    ? Object.values(covidData.data.recovered)\r\n    : null;\r\n\r\n  const deaths = covidData.data\r\n    ? Object.values(covidData.data.deaths)\r\n    : null;\r\n\r\n  const cardAll = covidData.data ? (\r\n    <Line\r\n      data={{\r\n        labels: dates.map((date) => date),\r\n        datasets: [\r\n          {\r\n            data: cases.map((data) => data),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            backgroundColor: \"rgba(0, 0, 255, 0.5)\",\r\n            fill: false,\r\n            pointHoverBorderWidth: 4,\r\n          },\r\n          {\r\n            data: deaths.map((data) => data),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: false,\r\n          },\r\n          {\r\n            data: recovered.map((data) => data),\r\n            label: \"Recovered\",\r\n            borderColor: \"green\",\r\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n            fill: false,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  if (!countryData) {\r\n    return (\r\n      <div className={styles.container}>\r\n        {cardAll}\r\n        <h2>Choose a1 country</h2>\r\n        <Country\r\n          className={styles.Country}\r\n          handleCountryChange={handleCountryChange}\r\n        />\r\n        <h2>No available data for the current country</h2>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const countryDates = countryData.cases\r\n    ? Object.keys(countryData.cases)\r\n    : null;\r\n\r\n  const countryCases = countryData.cases\r\n    ? Object.values(countryData.cases)\r\n    : null;\r\n\r\n  const countryDeaths = countryData.deaths\r\n    ? Object.values(countryData.deaths)\r\n    : null;\r\n\r\n  const countryRecovered = countryData.recovered\r\n    ? Object.values(countryData.recovered)\r\n    : null;\r\n\r\n  const countryCard = countryData ? (\r\n    <Line\r\n    data={{\r\n      labels: countryDates.map((date) => date),\r\n      datasets: [\r\n        {\r\n          data: countryCases.map((data) => data),\r\n          label: \"Infected\",\r\n          borderColor: \"#3333ff\",\r\n          backgroundColor: \"rgba(0, 0, 255, 0.5)\",\r\n          fill: false,\r\n          pointHoverBorderWidth: 4,\r\n        },\r\n        {\r\n          data: countryDeaths.map((data) => data),\r\n          label: \"Deaths\",\r\n          borderColor: \"red\",\r\n          backgroundColor: \"rgba(255,0,0,0.5)\",\r\n          fill: false,\r\n        },\r\n        {\r\n          data: countryRecovered.map((data) => data),\r\n          label: \"Recovered\",\r\n          borderColor: \"green\",\r\n          backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n          fill: false,\r\n        },\r\n      ],\r\n    }}\r\n  />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      {cardAll}\r\n      <h2>Select a2 country</h2>\r\n      <Country\r\n        className={styles.Country}\r\n        handleCountryChange={handleCountryChange}\r\n      />\r\n      {countryCard}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\n\nimport styles from \"./Footer.module.css\";\n\nexport default function Footer() {\n  return (\n    <div className={styles.footer}>\n      <p>\n        Coronavirus Tracker developed by Ryan\n      </p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./Nav.module.css\";\n\nexport default function Nav() {\n  return (\n    <nav className={styles.navBar}>\n      <ul className={styles.navLinks}>\n        <Link to=\"/\">\n          <li>World</li>\n        </Link>\n        <Link to=\"/country\">\n          <li>Country</li>\n        </Link>\n      </ul>\n    </nav>\n  );\n}\n","import React from \"react\";\nimport styles from \"./App.module.css\";\nimport { Cards, Nav, Footer, CountryCards } from \"./component\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { fetchData } from \"./api\";\n\nclass App extends React.Component {\n  state = {\n    data: {},\n  };\n\n  async componentDidMount() {\n    const fetchedData = await fetchData();\n\n    this.setState({ data: fetchedData });\n  }\n\n  homePage = () => {\n    return (\n      <React.Fragment>\n        <Cards data={this.state.data} />\n      </React.Fragment>\n    );\n  };\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className={styles.container}>\n          <Nav />\n          <Switch>\n            <Route exact path=\"/\" component={this.homePage} />\n            <Route exact path=\"/country\" component={CountryCards} />\n          </Switch>\n          <Footer />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryCards_container__1UXwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FormControl\":\"Country_FormControl__2vDuU\",\"NativeSelect\":\"Country_NativeSelect__3cS3K\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"Nav_navBar__GI0wn\",\"navLinks\":\"Nav_navLinks__300MH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3dF2V\",\"logo\":\"App_logo__1ypSS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__3pYB-\"};"],"sourceRoot":""}